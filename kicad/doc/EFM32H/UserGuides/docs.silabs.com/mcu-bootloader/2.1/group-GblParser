<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
   <script async src="https://www.googletagmanager.com/gtag/js?id=UA-160330710-1"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-160330710-1');
</script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=0">
    <meta name="google" value="notranslate">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="theme-color" content="#444547">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <meta name="create-date" content="06/08/2022">
<meta name="content-type" content="Software API documentation">
<meta name="software-development-kits" content="32 bit MCU SDK">
<meta name="product-line" content="Microcontrollers">
<meta name="product-category" content="32-bit MCUs">
<meta name="product-family" content="Gecko">
<meta name="product-hierarchy" content="Microcontrollers,Microcontrollers|32-bit MCUs,Microcontrollers|32-bit MCUs|Gecko">
<meta name="docs-hierarchy" content="Documents,Documents|MCU Bootloader,Documents|MCU Bootloader|v2.1,Documents|MCU Bootloader|Latest">
    <title>GBL ParserComponents &gt; Image Parser - v2.1 - Gecko Bootloader API Documentation Silicon Labs</title>
    <link rel="stylesheet" href="https://docs.silabs.com/assets/styles.css">
    <script src="https://assets.adobedtm.com/0144d06d02c2/2c54aaf3cc70/launch-565181acbc03.js"></script>
  </head>
  <body>
    <nav class="navbar">
      <div class="search-bar">
        <input class='search-input' placeholder="search" />
        <input class='search-button' type='button'/>
      </div>
      <div class="menu-icon"></div>
      <div class="container">
        <a href='https://docs.silabs.com/'>docs.silabs.com</a>
      </div>
    </nav>
    <nav class="menu nocontent">
      <div class="top">
        <a href='https://silabs.com' class="logo"></a>
        <a href='https://docs.silabs.com/' class="home">docs.silabs.com</a>
        <div class="search-bar">
          <input class='search-input' placeholder="search" />
          <input class='search-button' type='button'/>
          <div class="search-site">
            <h5>Search in:</h5>
            <div class="search-site-selector"><span class="root" data-level='0'>docs</span></div>
          </div>
        </div>
      </div>
      <div class="main">
        <h3 id="gecko-bootloader-api-reference">Gecko Bootloader API Reference</h3><ul>
<li><a href="index.html">Gecko Bootloader</a></li><li><a href="modules">API Documentation</a><ul>
<li><a href="group-Interface">Application Interface</a><ul>
<li><a href="group-ParserInterface">Application Parser Interface</a><ul>
<li><a href="structBootloaderParserCallbacks-t">BootloaderParserCallbacks_t</a></li></ul>
</li><li><a href="group-ApplicationProperties">Application Properties</a><ul>
<li><a href="structApplicationData">ApplicationData</a></li><li><a href="structApplicationCertificate">ApplicationCertificate</a></li><li><a href="structApplicationProperties-t">ApplicationProperties_t</a></li></ul>
</li><li><a href="group-StorageInterface">Application Storage Interface</a><ul>
<li><a href="structBootloaderStorageSlot-t">BootloaderStorageSlot_t</a></li><li><a href="structBootloaderStorageImplementationInformation-t">BootloaderStorageImplementationInformation_t</a></li><li><a href="structBootloaderStorageInformation-t">BootloaderStorageInformation_t</a></li><li><a href="structBootloaderEraseStatus-t">BootloaderEraseStatus_t</a></li><li><a href="structBootloaderStorageFunctions">BootloaderStorageFunctions</a></li></ul>
</li><li><a href="group-CommonInterface">Common Application Interface</a><ul>
<li><a href="group-ResetInterface">Reset Information</a><ul>
<li><a href="structBootloaderResetCause-t">BootloaderResetCause_t</a></li></ul>
</li><li><a href="structBareBootTable-t">BareBootTable_t</a></li><li><a href="structBootloaderInformation-t">BootloaderInformation_t</a></li><li><a href="structBootloaderHeader-t">BootloaderHeader_t</a></li><li><a href="structFirstBootloaderTable-t">FirstBootloaderTable_t</a></li><li><a href="structMainBootloaderTable-t">MainBootloaderTable_t</a></li></ul>
</li></ul>
</li><li><a href="group-Core">Bootloader Core</a><ul>
<li><a href="group-Bootload">Bootload</a></li><li><a href="group-Flash">Flash</a></li><li><a href="group-Reset">Reset</a></li><li><a href="group-TrustZone">TrustZone</a></li><li><a href="group-Upgrade">Upgrade</a></li></ul>
</li><li><a href="group-Components">Components</a><ul>
<li><a href="group-Communication">Communication</a><ul>
<li><a href="group-CommunicationUtils">Utils</a><ul>
<li><a href="group-Xmodem">XMODEM Parser</a><ul>
<li><a href="group-Commands">Commands</a></li><li><a href="structXmodemPacket-t">XmodemPacket_t</a></li></ul>
</li></ul>
</li></ul>
</li><li><a href="group-Debug">Debug</a></li><li><a href="group-Decompressor">Decompressor</a><ul>
<li><a href="group-Lz4Decompressor">LZ4 Decompressor</a><ul>
<li><a href="structLz4Context-t">Lz4Context_t</a></li></ul>
</li></ul>
</li><li><a href="group-GpioActivation">GPIO Activation</a><ul>
<li><a href="group-ButtonGPIO">Button GPIO</a></li><li><a href="group-EZSPGPIO">EZSP GPIO</a></li></ul>
</li><li><a href="group-ImageParser">Image Parser</a><ul>
<li><a href="group-GblParser">GBL Parser</a><ul>
<li><a href="group-CustomTags">Custom GBL Tags</a><ul>
<li><a href="group-Lz4ProgTag">LZ4 Programming Tag</a><ul>
<li><a href="structLz4ParserContext-t">Lz4ParserContext_t</a></li></ul>
</li><li><a href="group-LzmaProgTag">LZMA Programming Tag</a></li><li><a href="structGblCustomTag-t">GblCustomTag_t</a></li></ul>
</li><li><a href="group-GblParserFormat">GBL Format</a><ul>
<li><a href="structGblTagHeader-t">GblTagHeader_t</a></li><li><a href="structGblHeader-t">GblHeader_t</a></li><li><a href="structVersionDependency-t">VersionDependency_t</a></li><li><a href="structGblApplication-t">GblApplication_t</a></li><li><a href="structGblBootloader-t">GblBootloader_t</a></li><li><a href="structGblSeUpgrade-t">GblSeUpgrade_t</a></li><li><a href="structGblMetadata-t">GblMetadata_t</a></li><li><a href="structGblProg-t">GblProg_t</a></li><li><a href="structGblEnd-t">GblEnd_t</a></li><li><a href="structGblEncryptionInitAesCcm-t">GblEncryptionInitAesCcm_t</a></li><li><a href="structGblEncryptionData-t">GblEncryptionData_t</a></li><li><a href="structGblCertificateEcdsaP256-t">GblCertificateEcdsaP256_t</a></li><li><a href="structGblSignatureEcdsaP256-t">GblSignatureEcdsaP256_t</a></li></ul>
</li><li><a href="structImageProperties-t">ImageProperties_t</a></li><li><a href="structParserContext-t">ParserContext_t</a></li><li><a href="structGblInputBuffer-t">GblInputBuffer_t</a></li></ul>
</li></ul>
</li><li><a href="group-Security">Security</a><ul>
<li><a href="group-AES">AES</a><ul>
<li><a href="structAesContext">AesContext</a></li><li><a href="structAesCtrContext">AesCtrContext</a></li></ul>
</li><li><a href="group-CRC16">CRC16</a></li><li><a href="group-CRC32">CRC32</a></li><li><a href="group-Decryption">Decryption</a><ul>
<li><a href="unionDecryptContext-t">DecryptContext_t</a></li><li><a href="unionAuthContext-t">AuthContext_t</a></li></ul>
</li><li><a href="group-ECDSA">ECDSA</a><ul>
<li><a href="group-ECC">ECC Library</a><ul>
<li><a href="structECC-Point-t">ECC_Point_t</a></li><li><a href="structECC-EcdsaSignature-t">ECC_EcdsaSignature_t</a></li></ul>
</li></ul>
</li><li><a href="group-SHA256">SHA256</a><ul>
<li><a href="structbtl-sha256-context">btl_sha256_context</a></li></ul>
</li><li><a href="group-SHA-256">SHA_256</a><ul>
<li><a href="unionSha256Context">Sha256Context</a></li></ul>
</li><li><a href="group-Tokens">Tokens</a></li></ul>
</li><li><a href="group-Storage">Storage</a><ul>
<li><a href="group-BootloadInfo">Bootload Info</a><ul>
<li><a href="structBootloadInfo-t">BootloadInfo_t</a></li></ul>
</li><li><a href="group-SpiflashConfigs">SPI Flash Configurations</a></li><li><a href="group-SpiflashConfigsSfdp">SPI Flash Configurations using SFDP</a></li><li><a href="structBootloaderStorageLayout-t">BootloaderStorageLayout_t</a></li></ul>
</li></ul>
</li><li><a href="group-Driver">Driver</a><ul>
<li><a href="group-Delay">Delay</a></li><li><a href="group-Spi">SPI</a></li><li><a href="group-Spi-peripheral">SPI Peripheral</a></li><li><a href="group-UART">UART</a></li></ul>
</li><li><a href="group-ErrorCodes">Error Codes</a><ul>
<li><a href="group-BootloadError">Bootloading Error Codes</a></li><li><a href="group-CommunicationError">Communication Component Error Codes</a></li><li><a href="group-CompressionError">Compression Error Codes</a></li><li><a href="group-ErrorBases">Error Code Base Values</a></li><li><a href="group-ParserError">Image Parser Error Codes</a></li><li><a href="group-InitError">Initialization Error Codes</a></li><li><a href="group-ParseErrpr">Parse Error Codes</a></li><li><a href="group-SpiPeripheralError">SPI Peripheral Driver Error Codes</a></li><li><a href="group-SecurityError">Security Error Codes</a></li><li><a href="group-StorageError">Storage Driver Error Codes</a></li><li><a href="group-UartError">UART Driver Error Codes</a></li><li><a href="group-XmodemError">XMODEM Error Codes</a></li></ul>
</li></ul>
</li><li><a href="_version_history">Version History</a></li></ul>
<h3 id="more-documentation"><a href="https://www.silabs.com/support/resources.ct-application-notes?query=%22gecko%20bootloader%22">More Documentation</a></h3>
      </div>
      <div id="split-bar"></div>
    </nav>
    <div class="overlay"></div>
    <main class="content">
      <article>
        <p class="banner">You are viewing documentation for version: <em>2.1</em> | <a href="https://docs.silabs.com/mcu-bootloader/latest/version-history">Version History</a></p><div class="header">
  
  <div class="headertitle">
  <h1 class="title">GBL ParserComponents &gt; Image Parser</h1></div>
</div><!--header-->
<div class="contents">
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<p>GBL parser implementation. </p>
<p>Image parser for GBL files. Parses GBL files based on the <a href="group-GblParserFormat" class="el" >GBL file format specification</a>. Callbacks are used to present data and metadata contents of the GBL file to the bootloader. </p>
<table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="groups"></a>
Modules</h2></td></tr>
<tr class="memitem"><td class="memItemRight" valign="bottom"><a href="group-CustomTags" class="" >Custom GBL Tags</a></td></tr>
<tr class="memdesc"><td class="mdescRight">Handle custom GBL tags for added functionality in the GBL parser. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemRight" valign="bottom"><a href="group-GblParserFormat" class="" >GBL Format</a></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a href="structImageProperties-t" class="el" >ImageProperties_t</a></td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Structure containing state of the image file processed.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a href="structParserContext-t" class="el" >ParserContext_t</a></td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Image parser context definition.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a href="structGblInputBuffer-t" class="el" >GblInputBuffer_t</a></td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">GBL parser input buffer.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf8ab08c3269742851d5075ac79b8ee2e"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaf8ab08c3269742851d5075ac79b8ee2e" class="el" >PARSER_FLAG_ENCRYPTED</a>&nbsp;&nbsp;&nbsp;(1U &lt;&lt; 0U)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">GBL file is encrypted. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa0c528ade014db7083fc098d6a552ea3"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaa0c528ade014db7083fc098d6a552ea3" class="el" >PARSER_FLAG_PARSE_CUSTOM_TAGS</a>&nbsp;&nbsp;&nbsp;(1U &lt;&lt; 5U)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parse custom tags rather than silently traversing them. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga505c8980ae983e534bc03437c4ab891e"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga505c8980ae983e534bc03437c4ab891e" class="el" >PARSER_FLAGS_PUBLIC_MASK</a>&nbsp;&nbsp;&nbsp;<code>PARSER_FLAG_PARSE_CUSTOM_TAGS</code></td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Some flags are public, some are internal to the parser. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa883901b5893bc7b9e67b043a7e147f6"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaa883901b5893bc7b9e67b043a7e147f6" class="el" >GBL_PARSER_BUFFER_SIZE</a>&nbsp;&nbsp;&nbsp;64UL</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">GBL parser buffer size. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga30e34d3f4713d7f4836022e8e676bae4" class="el" >PARSER_REQUIRE_AUTHENTICITY</a>&nbsp;&nbsp;&nbsp;(false)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parser requires upgrade images to be signed, providing authenticity, if true.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad133aad845ef41f42c849d7d93353519"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gad133aad845ef41f42c849d7d93353519" class="el" >PARSER_REQUIRE_CONFIDENTIALITY</a>&nbsp;&nbsp;&nbsp;(false)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parser requires upgrade images to be encrypted, providing confidentiality, if true. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga81d3b0b65c99b9b56245185ff6216d38"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga81d3b0b65c99b9b56245185ff6216d38" class="el" >PARSER_REQUIRE_CERTIFICATE_AUTHENTICITY</a>&nbsp;&nbsp;&nbsp;(false)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parser requires upgrade images to be authenticated by the bootloader certificate, if true. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga6a690047027a8fe98be5f34a7a90088d"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga6a690047027a8fe98be5f34a7a90088d" class="el" >PARSER_REQUIRE_ANTI_ROLLBACK_PROTECTION</a>&nbsp;&nbsp;&nbsp;(false)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parser requires rollback protection of applications, if true. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad524ed192d7d7b84960d5a6861d49eb5"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gad524ed192d7d7b84960d5a6861d49eb5" class="el" >PARSER_APPLICATION_MINIMUM_VERSION_VALID</a>&nbsp;&nbsp;&nbsp;(0UL)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Defines the minimum application version that can be accepted. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga01e1e9dc333a4791927ee40b66d8f7c7"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga01e1e9dc333a4791927ee40b66d8f7c7" class="el" >BTL_IMAGE_CONTENT_APPLICATION</a>&nbsp;&nbsp;&nbsp;0x01U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Upgrade image contains application upgrade. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga38af64491a8b74ddb4d2791569b15ac8"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga38af64491a8b74ddb4d2791569b15ac8" class="el" >BTL_IMAGE_CONTENT_BOOTLOADER</a>&nbsp;&nbsp;&nbsp;0x02U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Upgrade image contains bootloader upgrade. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga5a923fcc84baa1db36412ba231094114"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga5a923fcc84baa1db36412ba231094114" class="el" >BTL_IMAGE_CONTENT_SE</a>&nbsp;&nbsp;&nbsp;0x04U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Upgrade image contains SE upgrade. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf6ac628961c5640e3d8cf9b8281337a6"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaf6ac628961c5640e3d8cf9b8281337a6" class="el" >BTL_IMAGE_INSTRUCTION_APPLICATION</a>&nbsp;&nbsp;&nbsp;0x01U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Application upgrade should be applied from upgrade image. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gab8e1ed52101aa1136dd94671a93d3c97"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gab8e1ed52101aa1136dd94671a93d3c97" class="el" >BTL_IMAGE_INSTRUCTION_BOOTLOADER</a>&nbsp;&nbsp;&nbsp;0x02U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Bootloader upgrade should be applied from upgrade image. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga25413530619f1a8c2bb0ac135de2bd12"></a>
#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga25413530619f1a8c2bb0ac135de2bd12" class="el" >BTL_IMAGE_INSTRUCTION_SE</a>&nbsp;&nbsp;&nbsp;0x04U</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">SE upgrade should be applied from upgrade image. <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaf1af9398f99d951a5e0eedfcd55a9286" class="el" >GblParserState_t</a> { <br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a9d54aaab598933f81b939a03c3fd7fc9" class="el" >GblParserStateInit</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a89487e19e5f0a0c04c7e77e9c45b3285" class="el" >GblParserStateIdle</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286aee11b9802193864c4dbb95d261df1b01" class="el" >GblParserStateHeader</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a27967ef8f1043a5f03ead557473d261c" class="el" >GblParserStateBootloader</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286ae3dc679cb306abebba9ee06a53c941a6" class="el" >GblParserStateBootloaderData</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286abd6d11c85dffa18b4eedfdc2db3f7dd2" class="el" >GblParserStateApplication</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286aad12312f75421ea37b056b6dca446bb0" class="el" >GblParserStateMetadata</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286adaa0e0653db7cf4fc8dcdb866bdf339c" class="el" >GblParserStateMetadataData</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286abb681c866b77986d4b3687e65be80b0b" class="el" >GblParserStateProg</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286ae28e821a6f2c69cf0f14d1c3813129c3" class="el" >GblParserStateProgData</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a03366f488f7f548cf90903da7e3db1f4" class="el" >GblParserStateSe</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a46cd0804c5a4e396a6ec35c6d6908205" class="el" >GblParserStateSeData</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a888a2b209e0120bd2af002c7af2c5a62" class="el" >GblParserStateEraseProg</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a05934597d1c4ef3c2b5188cd27144185" class="el" >GblParserStateFinalize</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286aae41938631e7f3f152ba5d12f7ceeda7" class="el" >GblParserStateDone</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286abec22ae1803cf921b5fac4b7985bbafa" class="el" >GblParserStateEncryptionInit</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286ab37183aa6cf9c16df6cdde9186e2a86f" class="el" >GblParserStateEncryptionContainer</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286a56b449c31375915fea8f2e819ae7f38e" class="el" >GblParserStateSignature</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286aec7ce13f1ed4d134ac09fb3401e6e724" class="el" >GblParserStateCustomTag</a>, 
<br>
&nbsp;&nbsp;<a href="group-GblParser#ggaf1af9398f99d951a5e0eedfcd55a9286acec90b6063a287175f1874d7a69cf14d" class="el" >GblParserStateError</a>
<br>
 }</td></tr><tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">State in the GBL parser state machine.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>

</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gadf66be43741dd12381776477937643ef" class="el" >parser_init</a> (void *context, void *decryptContext, void *authContext, uint8_t flags)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga465e7dc3509f45898a21219e786709ee" class="el" >parser_parse</a> (void *context, <a href="structImageProperties-t" class="el" >ImageProperties_t</a> *imageProperties, uint8_t buffer[], size_t length, const <a href="structBootloaderParserCallbacks-t" class="el" >BootloaderParserCallbacks_t</a> *callbacks)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga6e47401c0a3243e16db851355ddc4b16" class="el" >parser_verifyCertificate</a> (void *context, void *input, void *blProperties, void *shaState)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#ga7e09b7b6eeb442e8c6d8b27c9548f501" class="el" >gbl_writeProgData</a> (<a href="structParserContext-t" class="el" >ParserContext_t</a> *context, uint8_t buffer[], size_t length, const <a href="structBootloaderParserCallbacks-t" class="el" >BootloaderParserCallbacks_t</a> *callbacks)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-GblParser#gaa00646e4e7022125218bb09cb1ba7922" class="el" >gbl_getData</a> (<a href="structParserContext-t" class="el" >ParserContext_t</a> *context, <a href="structGblInputBuffer-t" class="el" >GblInputBuffer_t</a> *input, uint8_t outputBuffer[], size_t outputLength, bool applySHA, bool decrypt)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga30e34d3f4713d7f4836022e8e676bae4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">#define PARSER_REQUIRE_AUTHENTICITY&nbsp;&nbsp;&nbsp;(false)</td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Parser requires upgrade images to be signed, providing authenticity, if true. </p>
<p>Bootloader/parser configurations </p>

<p>Definition at line <code>69</code> of file <code>btl_gbl_parser.h</code>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gaf1af9398f99d951a5e0eedfcd55a9286"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">enum <a href="group-GblParser#gaf1af9398f99d951a5e0eedfcd55a9286" class="el" >GblParserState_t</a></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>State in the GBL parser state machine. </p>
<table class="fieldtable">
<tbody><tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a9d54aaab598933f81b939a03c3fd7fc9"></a>GblParserStateInit&nbsp;</td><td class="fielddoc">
<p>Initial state. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a89487e19e5f0a0c04c7e77e9c45b3285"></a>GblParserStateIdle&nbsp;</td><td class="fielddoc">
<p>Idle state. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286aee11b9802193864c4dbb95d261df1b01"></a>GblParserStateHeader&nbsp;</td><td class="fielddoc">
<p>Parsing header tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a27967ef8f1043a5f03ead557473d261c"></a>GblParserStateBootloader&nbsp;</td><td class="fielddoc">
<p>Parsing bootloader tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286ae3dc679cb306abebba9ee06a53c941a6"></a>GblParserStateBootloaderData&nbsp;</td><td class="fielddoc">
<p>Parsing bootloader tag data. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286abd6d11c85dffa18b4eedfdc2db3f7dd2"></a>GblParserStateApplication&nbsp;</td><td class="fielddoc">
<p>Parsing application tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286aad12312f75421ea37b056b6dca446bb0"></a>GblParserStateMetadata&nbsp;</td><td class="fielddoc">
<p>Parsing metadata tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286adaa0e0653db7cf4fc8dcdb866bdf339c"></a>GblParserStateMetadataData&nbsp;</td><td class="fielddoc">
<p>Parsing metadata tag data. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286abb681c866b77986d4b3687e65be80b0b"></a>GblParserStateProg&nbsp;</td><td class="fielddoc">
<p>Parsing flash program tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286ae28e821a6f2c69cf0f14d1c3813129c3"></a>GblParserStateProgData&nbsp;</td><td class="fielddoc">
<p>Parsing flash program tag data. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a03366f488f7f548cf90903da7e3db1f4"></a>GblParserStateSe&nbsp;</td><td class="fielddoc">
<p>Parsing SE tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a46cd0804c5a4e396a6ec35c6d6908205"></a>GblParserStateSeData&nbsp;</td><td class="fielddoc">
<p>Parsing SE tag data. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a888a2b209e0120bd2af002c7af2c5a62"></a>GblParserStateEraseProg&nbsp;</td><td class="fielddoc">
<p>Parsing flash erase&amp;program tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a05934597d1c4ef3c2b5188cd27144185"></a>GblParserStateFinalize&nbsp;</td><td class="fielddoc">
<p>Finalizing file. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286aae41938631e7f3f152ba5d12f7ceeda7"></a>GblParserStateDone&nbsp;</td><td class="fielddoc">
<p>Parsing complete. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286abec22ae1803cf921b5fac4b7985bbafa"></a>GblParserStateEncryptionInit&nbsp;</td><td class="fielddoc">
<p>Parsing encryption init tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286ab37183aa6cf9c16df6cdde9186e2a86f"></a>GblParserStateEncryptionContainer&nbsp;</td><td class="fielddoc">
<p>Parsing encryption data tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286a56b449c31375915fea8f2e819ae7f38e"></a>GblParserStateSignature&nbsp;</td><td class="fielddoc">
<p>Parsing signature tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286aec7ce13f1ed4d134ac09fb3401e6e724"></a>GblParserStateCustomTag&nbsp;</td><td class="fielddoc">
<p>Parsing custom tag. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggaf1af9398f99d951a5e0eedfcd55a9286acec90b6063a287175f1874d7a69cf14d"></a>GblParserStateError&nbsp;</td><td class="fielddoc">
<p>Error state. </p>
</td></tr>
</tbody></table>

<p>Definition at line <code>106</code> of file <code>btl_gbl_parser.h</code>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="gadf66be43741dd12381776477937643ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t parser_init </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>context, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>decryptContext, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>authContext, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"><code>flags&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>Initialize the parser's context.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramname"><code>context</code></td><td>Pointer to context for the parser implementation </td></tr>
    <tr><td class="paramname"><code>decryptContext</code></td><td>Pointer to context for decryption of parsed file </td></tr>
    <tr><td class="paramname"><code>authContext</code></td><td>Pointer to context for authentication of parsed file </td></tr>
    <tr><td class="paramname"><code>flags</code></td><td>Flags for parser support</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a href="group-ErrorCodes#gaf5e631186d857be458f4bdb824db1884" class="el" >BOOTLOADER_OK</a> if OK, error code otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga465e7dc3509f45898a21219e786709ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t parser_parse </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>context, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a href="structImageProperties-t" class="el" >ImageProperties_t</a> *&nbsp;</td>
          <td class="paramname"><code>imageProperties, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"><code>buffer[], </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"><code>length, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a href="structBootloaderParserCallbacks-t" class="el" >BootloaderParserCallbacks_t</a> *&nbsp;</td>
          <td class="paramname"><code>callbacks&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>Parse an image file to extract the binary and some metadata.</p>
<p>Pushes data into the image file parser to be parsed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramname"><code>context</code></td><td>Pointer to the specific parser's context variable </td></tr>
    <tr><td class="paramname"><code>imageProperties</code></td><td>Pointer to the image file state variable </td></tr>
    <tr><td class="paramname"><code>buffer</code></td><td>Pointer to byte array containing data to parse </td></tr>
    <tr><td class="paramname"><code>length</code></td><td>Size in bytes of the data in buffer </td></tr>
    <tr><td class="paramname"><code>callbacks</code></td><td>Struct containing function pointers to be called by the parser to pass the extracted binary data back to BTL.</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a href="group-ErrorCodes#gaf5e631186d857be458f4bdb824db1884" class="el" >BOOTLOADER_OK</a> if OK, error code otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6e47401c0a3243e16db851355ddc4b16"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t parser_verifyCertificate </td>
          <td>(</td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>context, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>input, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>blProperties, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&nbsp;</td>
          <td class="paramname"><code>shaState&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>Verify the GBL certificate.</p>
<dl class="section note"><dt>Note</dt><dd>The behavior of this function depends on the context state.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[in,out]</td><td class="paramname"><code>context</code></td><td>GBL parser context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>input</code></td><td>Input data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>blProperties</code></td><td>Pointer to <a href="structApplicationProperties-t" class="el"  title="Application Properties struct. ">ApplicationProperties_t</a> of bootloader </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname"><code>shaState</code></td><td>Pointer to <a href="group-SHA-256#ga3ab2807ea1ed984db87c8cd422c2b1b8" class="el"  title="Context type for SHA algorithm. ">Sha256Context_t</a> used to store SHA256 of GBL certificate</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a href="group-ParserError#ga2e8e9d956914bb541f46091ffb480d1f" class="el" >BOOTLOADER_ERROR_PARSER_PARSED</a> if done parsing the current input buffer. <a href="group-ErrorCodes#gaf5e631186d857be458f4bdb824db1884" class="el" >BOOTLOADER_OK</a> if input data is stored in the internal buffer. <a href="group-ErrorCodes#gaf5e631186d857be458f4bdb824db1884" class="el" >BOOTLOADER_OK</a> if the certificate in GBL is accepted. <a href="group-ParserError#ga03b48f3dfd6c363db868cd759aa9d4e9" class="el" >BOOTLOADER_ERROR_PARSER_SIGNATURE</a> if the certificate in GBL is rejected. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7e09b7b6eeb442e8c6d8b27c9548f501"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t gbl_writeProgData </td>
          <td>(</td>
          <td class="paramtype"><a href="structParserContext-t" class="el" >ParserContext_t</a> *&nbsp;</td>
          <td class="paramname"><code>context, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"><code>buffer[], </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"><code>length, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a href="structBootloaderParserCallbacks-t" class="el" >BootloaderParserCallbacks_t</a> *&nbsp;</td>
          <td class="paramname"><code>callbacks&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>Write application data. This function is called when parsing any tag with <a href="structGblProg-t" class="el" >GblProg_t</a> structured content.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramname"><code>context</code></td><td>GBL parser context </td></tr>
    <tr><td class="paramname"><code>buffer</code></td><td>Input buffer containing data to be written </td></tr>
    <tr><td class="paramname"><code>length</code></td><td>Size of input buffer </td></tr>
    <tr><td class="paramname"><code>callbacks</code></td><td>GBL Parser callbacks for writing data</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error code </dd></dl>

</div>
</div>
<a class="anchor" id="gaa00646e4e7022125218bb09cb1ba7922"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t gbl_getData </td>
          <td>(</td>
          <td class="paramtype"><a href="structParserContext-t" class="el" >ParserContext_t</a> *&nbsp;</td>
          <td class="paramname"><code>context, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a href="structGblInputBuffer-t" class="el" >GblInputBuffer_t</a> *&nbsp;</td>
          <td class="paramname"><code>input, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&nbsp;</td>
          <td class="paramname"><code>outputBuffer[], </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"><code>outputLength, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"><code>applySHA, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"><code>decrypt&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>Get data from storage and internal input buffer. This function advances the parser state.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramname"><code>context</code></td><td>GBL parser context </td></tr>
    <tr><td class="paramname"><code>input</code></td><td>Input data </td></tr>
    <tr><td class="paramname"><code>outputBuffer</code></td><td>Output data </td></tr>
    <tr><td class="paramname"><code>outputLength</code></td><td>Output data length </td></tr>
    <tr><td class="paramname"><code>applySHA</code></td><td>Update SHA256 in the GBL parser context </td></tr>
    <tr><td class="paramname"><code>decrypt</code></td><td>Decrypt the output data</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error code </dd></dl>

</div>
</div>
</div>
      </article>
    </main>
    <script type="text/javascript" src="https://docs.silabs.com/assets/script.js"></script>
    <script type='text/javascript'>
      var tldr = '/mcu-bootloader/2.1/';
      var _map = '';
    </script>
        <script type="text/javascript">
       try {
        _satellite.pageBottom();
       } catch(err) {
        console.log("Adobe DTM (Analytics) _satellite has not been loaded. Is there any chance you're using an AdBlocker?");
       }
    </script>
  </body>
</html>
