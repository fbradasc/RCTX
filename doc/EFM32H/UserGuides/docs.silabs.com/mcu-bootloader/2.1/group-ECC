<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
   <script async src="https://www.googletagmanager.com/gtag/js?id=UA-160330710-1"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-160330710-1');
</script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=0">
    <meta name="google" value="notranslate">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="theme-color" content="#444547">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <meta name="create-date" content="06/08/2022">
<meta name="content-type" content="Software API documentation">
<meta name="software-development-kits" content="32 bit MCU SDK">
<meta name="product-line" content="Microcontrollers">
<meta name="product-category" content="32-bit MCUs">
<meta name="product-family" content="Gecko">
<meta name="product-hierarchy" content="Microcontrollers,Microcontrollers|32-bit MCUs,Microcontrollers|32-bit MCUs|Gecko">
<meta name="docs-hierarchy" content="Documents,Documents|MCU Bootloader,Documents|MCU Bootloader|v2.1,Documents|MCU Bootloader|Latest">
    <title>ECC LibraryComponents &gt; Security &gt; ECDSA - v2.1 - Gecko Bootloader API Documentation Silicon Labs</title>
    <link rel="stylesheet" href="https://docs.silabs.com/assets/styles.css">
    <script src="https://assets.adobedtm.com/0144d06d02c2/2c54aaf3cc70/launch-565181acbc03.js"></script>
  </head>
  <body>
    <nav class="navbar">
      <div class="search-bar">
        <input class='search-input' placeholder="search" />
        <input class='search-button' type='button'/>
      </div>
      <div class="menu-icon"></div>
      <div class="container">
        <a href='https://docs.silabs.com/'>docs.silabs.com</a>
      </div>
    </nav>
    <nav class="menu nocontent">
      <div class="top">
        <a href='https://silabs.com' class="logo"></a>
        <a href='https://docs.silabs.com/' class="home">docs.silabs.com</a>
        <div class="search-bar">
          <input class='search-input' placeholder="search" />
          <input class='search-button' type='button'/>
          <div class="search-site">
            <h5>Search in:</h5>
            <div class="search-site-selector"><span class="root" data-level='0'>docs</span></div>
          </div>
        </div>
      </div>
      <div class="main">
        <h3 id="gecko-bootloader-api-reference">Gecko Bootloader API Reference</h3><ul>
<li><a href="index.html">Gecko Bootloader</a></li><li><a href="modules">API Documentation</a><ul>
<li><a href="group-Interface">Application Interface</a><ul>
<li><a href="group-ParserInterface">Application Parser Interface</a><ul>
<li><a href="structBootloaderParserCallbacks-t">BootloaderParserCallbacks_t</a></li></ul>
</li><li><a href="group-ApplicationProperties">Application Properties</a><ul>
<li><a href="structApplicationData">ApplicationData</a></li><li><a href="structApplicationCertificate">ApplicationCertificate</a></li><li><a href="structApplicationProperties-t">ApplicationProperties_t</a></li></ul>
</li><li><a href="group-StorageInterface">Application Storage Interface</a><ul>
<li><a href="structBootloaderStorageSlot-t">BootloaderStorageSlot_t</a></li><li><a href="structBootloaderStorageImplementationInformation-t">BootloaderStorageImplementationInformation_t</a></li><li><a href="structBootloaderStorageInformation-t">BootloaderStorageInformation_t</a></li><li><a href="structBootloaderEraseStatus-t">BootloaderEraseStatus_t</a></li><li><a href="structBootloaderStorageFunctions">BootloaderStorageFunctions</a></li></ul>
</li><li><a href="group-CommonInterface">Common Application Interface</a><ul>
<li><a href="group-ResetInterface">Reset Information</a><ul>
<li><a href="structBootloaderResetCause-t">BootloaderResetCause_t</a></li></ul>
</li><li><a href="structBareBootTable-t">BareBootTable_t</a></li><li><a href="structBootloaderInformation-t">BootloaderInformation_t</a></li><li><a href="structBootloaderHeader-t">BootloaderHeader_t</a></li><li><a href="structFirstBootloaderTable-t">FirstBootloaderTable_t</a></li><li><a href="structMainBootloaderTable-t">MainBootloaderTable_t</a></li></ul>
</li></ul>
</li><li><a href="group-Core">Bootloader Core</a><ul>
<li><a href="group-Bootload">Bootload</a></li><li><a href="group-Flash">Flash</a></li><li><a href="group-Reset">Reset</a></li><li><a href="group-TrustZone">TrustZone</a></li><li><a href="group-Upgrade">Upgrade</a></li></ul>
</li><li><a href="group-Components">Components</a><ul>
<li><a href="group-Communication">Communication</a><ul>
<li><a href="group-CommunicationUtils">Utils</a><ul>
<li><a href="group-Xmodem">XMODEM Parser</a><ul>
<li><a href="group-Commands">Commands</a></li><li><a href="structXmodemPacket-t">XmodemPacket_t</a></li></ul>
</li></ul>
</li></ul>
</li><li><a href="group-Debug">Debug</a></li><li><a href="group-Decompressor">Decompressor</a><ul>
<li><a href="group-Lz4Decompressor">LZ4 Decompressor</a><ul>
<li><a href="structLz4Context-t">Lz4Context_t</a></li></ul>
</li></ul>
</li><li><a href="group-GpioActivation">GPIO Activation</a><ul>
<li><a href="group-ButtonGPIO">Button GPIO</a></li><li><a href="group-EZSPGPIO">EZSP GPIO</a></li></ul>
</li><li><a href="group-ImageParser">Image Parser</a><ul>
<li><a href="group-GblParser">GBL Parser</a><ul>
<li><a href="group-CustomTags">Custom GBL Tags</a><ul>
<li><a href="group-Lz4ProgTag">LZ4 Programming Tag</a><ul>
<li><a href="structLz4ParserContext-t">Lz4ParserContext_t</a></li></ul>
</li><li><a href="group-LzmaProgTag">LZMA Programming Tag</a></li><li><a href="structGblCustomTag-t">GblCustomTag_t</a></li></ul>
</li><li><a href="group-GblParserFormat">GBL Format</a><ul>
<li><a href="structGblTagHeader-t">GblTagHeader_t</a></li><li><a href="structGblHeader-t">GblHeader_t</a></li><li><a href="structVersionDependency-t">VersionDependency_t</a></li><li><a href="structGblApplication-t">GblApplication_t</a></li><li><a href="structGblBootloader-t">GblBootloader_t</a></li><li><a href="structGblSeUpgrade-t">GblSeUpgrade_t</a></li><li><a href="structGblMetadata-t">GblMetadata_t</a></li><li><a href="structGblProg-t">GblProg_t</a></li><li><a href="structGblEnd-t">GblEnd_t</a></li><li><a href="structGblEncryptionInitAesCcm-t">GblEncryptionInitAesCcm_t</a></li><li><a href="structGblEncryptionData-t">GblEncryptionData_t</a></li><li><a href="structGblCertificateEcdsaP256-t">GblCertificateEcdsaP256_t</a></li><li><a href="structGblSignatureEcdsaP256-t">GblSignatureEcdsaP256_t</a></li></ul>
</li><li><a href="structImageProperties-t">ImageProperties_t</a></li><li><a href="structParserContext-t">ParserContext_t</a></li><li><a href="structGblInputBuffer-t">GblInputBuffer_t</a></li></ul>
</li></ul>
</li><li><a href="group-Security">Security</a><ul>
<li><a href="group-AES">AES</a><ul>
<li><a href="structAesContext">AesContext</a></li><li><a href="structAesCtrContext">AesCtrContext</a></li></ul>
</li><li><a href="group-CRC16">CRC16</a></li><li><a href="group-CRC32">CRC32</a></li><li><a href="group-Decryption">Decryption</a><ul>
<li><a href="unionDecryptContext-t">DecryptContext_t</a></li><li><a href="unionAuthContext-t">AuthContext_t</a></li></ul>
</li><li><a href="group-ECDSA">ECDSA</a><ul>
<li><a href="group-ECC">ECC Library</a><ul>
<li><a href="structECC-Point-t">ECC_Point_t</a></li><li><a href="structECC-EcdsaSignature-t">ECC_EcdsaSignature_t</a></li></ul>
</li></ul>
</li><li><a href="group-SHA256">SHA256</a><ul>
<li><a href="structbtl-sha256-context">btl_sha256_context</a></li></ul>
</li><li><a href="group-SHA-256">SHA_256</a><ul>
<li><a href="unionSha256Context">Sha256Context</a></li></ul>
</li><li><a href="group-Tokens">Tokens</a></li></ul>
</li><li><a href="group-Storage">Storage</a><ul>
<li><a href="group-BootloadInfo">Bootload Info</a><ul>
<li><a href="structBootloadInfo-t">BootloadInfo_t</a></li></ul>
</li><li><a href="group-SpiflashConfigs">SPI Flash Configurations</a></li><li><a href="group-SpiflashConfigsSfdp">SPI Flash Configurations using SFDP</a></li><li><a href="structBootloaderStorageLayout-t">BootloaderStorageLayout_t</a></li></ul>
</li></ul>
</li><li><a href="group-Driver">Driver</a><ul>
<li><a href="group-Delay">Delay</a></li><li><a href="group-Spi">SPI</a></li><li><a href="group-Spi-peripheral">SPI Peripheral</a></li><li><a href="group-UART">UART</a></li></ul>
</li><li><a href="group-ErrorCodes">Error Codes</a><ul>
<li><a href="group-BootloadError">Bootloading Error Codes</a></li><li><a href="group-CommunicationError">Communication Component Error Codes</a></li><li><a href="group-CompressionError">Compression Error Codes</a></li><li><a href="group-ErrorBases">Error Code Base Values</a></li><li><a href="group-ParserError">Image Parser Error Codes</a></li><li><a href="group-InitError">Initialization Error Codes</a></li><li><a href="group-ParseErrpr">Parse Error Codes</a></li><li><a href="group-SpiPeripheralError">SPI Peripheral Driver Error Codes</a></li><li><a href="group-SecurityError">Security Error Codes</a></li><li><a href="group-StorageError">Storage Driver Error Codes</a></li><li><a href="group-UartError">UART Driver Error Codes</a></li><li><a href="group-XmodemError">XMODEM Error Codes</a></li></ul>
</li></ul>
</li><li><a href="_version_history">Version History</a></li></ul>
<h3 id="more-documentation"><a href="https://www.silabs.com/support/resources.ct-application-notes?query=%22gecko%20bootloader%22">More Documentation</a></h3>
      </div>
      <div id="split-bar"></div>
    </nav>
    <div class="overlay"></div>
    <main class="content">
      <article>
        <p class="banner">You are viewing documentation for version: <em>2.1</em> | <a href="https://docs.silabs.com/mcu-bootloader/latest/version-history">Version History</a></p><div class="header">
  
  <div class="headertitle">
  <h1 class="title">ECC LibraryComponents &gt; Security &gt; ECDSA</h1></div>
</div><!--header-->
<div class="contents">
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<p>Elliptic Curve Cryptography Library. </p>
<p>The Elliptic Curve Cryptography (ECC) API includes ECDSA verification on one of the elliptic curves recommended by NIST in csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf :</p><ul>
<li>secp256r1: NIST/SECG X9.62 curve over a 256 bit prime field </li>
</ul>
<table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a href="structECC-Point-t" class="el" >ECC_Point_t</a></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a href="structECC-EcdsaSignature-t" class="el" >ECC_EcdsaSignature_t</a></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga74b13beb30f0eafaf0dd979ebd96e51b" class="el" >ECC_BIGINT_SIZE_IN_BITS</a>&nbsp;&nbsp;&nbsp;(256)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga2f5d40dc29d58de9bf86d534a2a953a9" class="el" >ECC_BIGINT_SIZE_IN_BYTES</a>&nbsp;&nbsp;&nbsp;(<a href="group-ECC#ga74b13beb30f0eafaf0dd979ebd96e51b" class="el" >ECC_BIGINT_SIZE_IN_BITS</a> / 8)</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga36f016a5c876eeea1ccb4c4a57bcb372" class="el" >ECC_BIGINT_SIZE_IN_32BIT_WORDS</a></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>[<a href="group-ECC#ga36f016a5c876eeea1ccb4c4a57bcb372" class="el" >ECC_BIGINT_SIZE_IN_32BIT_WORDS</a>]</td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table><table class="memberdecls">
<tbody><tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">int32_t&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga24cd18c21877bc23ae25cb14d6a4ce2f" class="el" >ECC_ECDSA_VerifySignatureP256</a> (CRYPTO_TypeDef *crypto, const uint8_t *msgDigest, int msgDigestLen, const <a href="structECC-Point-t" class="el" >ECC_Point_t</a> *publicKey, <a href="structECC-EcdsaSignature-t" class="el" >ECC_EcdsaSignature_t</a> *signature)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Verify an ECDSA signature.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#gac5d2eec74c56871b717204318135d6ee" class="el" >ECC_HexToBigInt</a> (<a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a> bigint, const char *hex)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert a large integer from a hexadecimal string to the ECC_BigInt_t format.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga11cb2fb9ad1fa7f74633d287bb380706" class="el" >ECC_BigIntToHex</a> (char *hex, <a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a> bigint)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert a large integer from the ECC_BigInt_t to a hexadecimal string format.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#gabf3e6975f06158ffc3249edf60df9fe2" class="el" >ECC_ByteArrayToBigInt</a> (<a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a> bigint, const uint8_t *bytearray)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert a big integer from a byte array to the ECC_BigInt_t format.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga6b34a99fc23b66bfaa5d6d8fced76705" class="el" >ECC_BigIntToByteArray</a> (uint8_t *bytearray, <a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a> bigint)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert a large integer from the ECC_BigInt_t to the byte array format.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
<tr class="memitem"><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a href="group-ECC#ga62d598cc176acabfc7db4e88196e039c" class="el" >ECC_UnsignedIntToBigInt</a> (<a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a> bigint, const uint32_t value)</td></tr>
<tr class="memdesc"><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert an integer from uint32_t to ECC_BigInt_t format.  <br></td></tr>
<tr class="separator"><td class="memSeparator" colspan="2">&nbsp;</td></tr>
</tbody></table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga74b13beb30f0eafaf0dd979ebd96e51b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">#define ECC_BIGINT_SIZE_IN_BITS&nbsp;&nbsp;&nbsp;(256)</td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>ECC big integer size in bits. </p>

<p>Definition at line <code>49</code> of file <code>ecc.h</code>.</p>

</div>
</div>
<a class="anchor" id="ga2f5d40dc29d58de9bf86d534a2a953a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">#define ECC_BIGINT_SIZE_IN_BYTES&nbsp;&nbsp;&nbsp;(<a href="group-ECC#ga74b13beb30f0eafaf0dd979ebd96e51b" class="el" >ECC_BIGINT_SIZE_IN_BITS</a> / 8)</td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>ECC big integer size in bytes. </p>

<p>Definition at line <code>52</code> of file <code>ecc.h</code>.</p>

</div>
</div>
<a class="anchor" id="ga36f016a5c876eeea1ccb4c4a57bcb372"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">#define ECC_BIGINT_SIZE_IN_32BIT_WORDS</td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">(<a href="group-ECC#ga2f5d40dc29d58de9bf86d534a2a953a9" class="code" >ECC_BIGINT_SIZE_IN_BYTES</a> \</div>
<div class="line">                                        / <span class="keyword">sizeof</span>(uint32_t))</div>
<div class="ttc" id="group__ECC_html_ga2f5d40dc29d58de9bf86d534a2a953a9"><div class="ttname"><a href="group-ECC#ga2f5d40dc29d58de9bf86d534a2a953a9" >ECC_BIGINT_SIZE_IN_BYTES</a></div><div class="ttdeci">#define ECC_BIGINT_SIZE_IN_BYTES</div><div class="ttdef"><b>Definition:</b> <code>ecc.h:52</code></div></div>
</div><!-- fragment --><p>ECC big integer size in words. </p>

<p>Definition at line <code>55</code> of file <code>ecc.h</code>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="ga7473b9142bdec741ae4e2d2be8f703f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">typedef uint32_t ECC_BigInt_t[<a href="group-ECC#ga36f016a5c876eeea1ccb4c4a57bcb372" class="el" >ECC_BIGINT_SIZE_IN_32BIT_WORDS</a>]</td>
        </tr>
      </tbody></table>
</div><div class="memdoc">
<p>ECC big integer type </p>

<p>Definition at line <code>59</code> of file <code>ecc.h</code>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga24cd18c21877bc23ae25cb14d6a4ce2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">int32_t ECC_ECDSA_VerifySignatureP256 </td>
          <td>(</td>
          <td class="paramtype">CRYPTO_TypeDef *&nbsp;</td>
          <td class="paramname"><code>crypto, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&nbsp;</td>
          <td class="paramname"><code>msgDigest, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"><code>msgDigestLen, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a href="structECC-Point-t" class="el" >ECC_Point_t</a> *&nbsp;</td>
          <td class="paramname"><code>publicKey, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a href="structECC-EcdsaSignature-t" class="el" >ECC_EcdsaSignature_t</a> *&nbsp;</td>
          <td class="paramname"><code>signature&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Verify an ECDSA signature. </p>
<p>TBW</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[in]</td><td class="paramname"><code>crypto</code></td><td>Pointer to CRYPTO peripheral instance</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>msgDigest</code></td><td>The message digest associated with the signature.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>msgDigestLen</code></td><td>The length of the message digest.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>publicKey</code></td><td>Public key of entity that generated signature.</td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname"><code>signature</code></td><td>The signature to verify.</td></tr>
  </tbody></table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gac5d2eec74c56871b717204318135d6ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">void ECC_HexToBigInt </td>
          <td>(</td>
          <td class="paramtype"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>&nbsp;</td>
          <td class="paramname"><code>bigint, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"><code>hex&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Convert a large integer from a hexadecimal string to the ECC_BigInt_t format. </p>
<p>Convert a large integer from a hexadecimal string representation to a ECC_BigInt_t representation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[out]</td><td class="paramname"><code>bigint</code></td><td>Pointer to the location where to store the result. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>hex</code></td><td>The hex representation of the large integer to convert. </td></tr>
  </tbody></table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga11cb2fb9ad1fa7f74633d287bb380706"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">void ECC_BigIntToHex </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"><code>hex, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>&nbsp;</td>
          <td class="paramname"><code>bigint&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Convert a large integer from the ECC_BigInt_t to a hexadecimal string format. </p>
<p>Convert a large integer from a ECC_BigInt_t representation to a hexadecimal string representation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[out]</td><td class="paramname"><code>hex</code></td><td>Buffer where to store the hexadecimal result. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>bigint</code></td><td>The ECC_BigInt_t representation of the large integer to convert. </td></tr>
  </tbody></table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gabf3e6975f06158ffc3249edf60df9fe2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">void ECC_ByteArrayToBigInt </td>
          <td>(</td>
          <td class="paramtype"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>&nbsp;</td>
          <td class="paramname"><code>bigint, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&nbsp;</td>
          <td class="paramname"><code>bytearray&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Convert a big integer from a byte array to the ECC_BigInt_t format. </p>
<p>Convert a large integer from a byte array representation to a ECC_BigInt_t representation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[out]</td><td class="paramname"><code>bigint</code></td><td>Pointer to the location where to store the result. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>bytearray</code></td><td>The byte array representation of the large integer to convert. </td></tr>
  </tbody></table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6b34a99fc23b66bfaa5d6d8fced76705"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">void ECC_BigIntToByteArray </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&nbsp;</td>
          <td class="paramname"><code>bytearray, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>&nbsp;</td>
          <td class="paramname"><code>bigint&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Convert a large integer from the ECC_BigInt_t to the byte array format. </p>
<p>Convert a large integer from a ECC_BigInt_t representation to a byte array representation. Caution: byte array must be big enough to contain the result.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[out]</td><td class="paramname"><code>bytearray</code></td><td>Buffer to store the resulting byte array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>bigint</code></td><td>The ECC_BigInt_t representation of the large integer to convert. </td></tr>
  </tbody></table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga62d598cc176acabfc7db4e88196e039c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tbody><tr>
          <td class="memname">void ECC_UnsignedIntToBigInt </td>
          <td>(</td>
          <td class="paramtype"><a href="group-ECC#ga7473b9142bdec741ae4e2d2be8f703f4" class="el" >ECC_BigInt_t</a>&nbsp;</td>
          <td class="paramname"><code>bigint, </code></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32_t&nbsp;</td>
          <td class="paramname"><code>value&nbsp;</code></td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </tbody></table>
</div><div class="memdoc">

<p>Convert an integer from uint32_t to ECC_BigInt_t format. </p>
<p>Convert a integer from an uint32_t representation to a ECC_BigInt_t representation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tbody><tr><td class="paramdir">[out]</td><td class="paramname"><code>bigint</code></td><td>Pointer to the location to store the result. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname"><code>value</code></td><td>The value to convert. </td></tr>
  </tbody></table>
  </dd>
</dl>

</div>
</div>
</div>
      </article>
    </main>
    <script type="text/javascript" src="https://docs.silabs.com/assets/script.js"></script>
    <script type='text/javascript'>
      var tldr = '/mcu-bootloader/2.1/';
      var _map = '';
    </script>
        <script type="text/javascript">
       try {
        _satellite.pageBottom();
       } catch(err) {
        console.log("Adobe DTM (Analytics) _satellite has not been loaded. Is there any chance you're using an AdBlocker?");
       }
    </script>
  </body>
</html>
